public class Solution {
    public boolean wordBreak(String s, Set<String> wordDict) {
        boolean[] opt = new boolean[s.length() + 1];
        opt[0] = true;
        
        for(int i = 1; i <= s.length(); i ++){
            for(int j = 0; j < i; j ++){
                if(opt[j] == true && wordDict.contains(s.substring(j, i))){
                    opt[i] = true;
                    break;
                }
            }
        }
        
        return opt[s.length()];
    }
}


//三刷代码：
public class Solution {
    public boolean wordBreak(String s, Set<String> wordDict) {
        boolean[] dp = new boolean[s.length() + 1];
        Arrays.fill(dp, false);
        dp[0] = true;
        for(int i = 1; i <= s.length(); i ++){
            for(int j = 1; j <= i; j ++){
                String word = s.substring(j - 1, i);
                if(dp[j - 1] == true && wordDict.contains(word)){
                    dp[i] = true;
                    break;
                }
            } 
        }
        return dp[s.length()];
    }
}


//这道题目本质是DP啊。。
