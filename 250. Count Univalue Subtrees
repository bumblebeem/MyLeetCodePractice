/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
 
// Solution 1:
public class Solution {
    public int countUnivalSubtrees(TreeNode root) {
        int[] count = new int[1];
        helper(root, count);
        return count[0];
    }
    
    private boolean helper(TreeNode node, int[] count){
        if(node == null){
            return true;
        }
        boolean left = helper(node.left, count);
        boolean right = helper(node.right, count);
        if(left && right){
            if(node.left != null && node.left.val != node.val){
                return false;
            }
            if(node.right != null && node.right.val != node.val){
                return false;
            }
            count[0] ++;
            return true;
        }
        return false;
    }
}


// Solution 2:
// StefanPochmann的解法，爱装B的SB，偏用bitwise operator，看不懂
// https://discuss.leetcode.com/topic/20757/java-11-lines-added
