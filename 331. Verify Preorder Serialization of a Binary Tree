public class Solution {
    public boolean isValidSerialization(String preorder) {
        //define the degree of a node as "degree = indegree - outdegree"
        
        String[] nodes = preorder.split(",");
        int degree = -1;   //the degree of the root is -1
        
        for(String node : nodes){
            degree ++;   //enter a new node, indegree increases by 1, so degree increases by 1
            if(degree > 0){
                return false;
            }
            if(! node.equals("#")){
                degree -= 2;  //if node equals to "#", there is no outdegree, we do nothing; otherwise, outdegree increases by 2, thus degree decreases by 2
            }
        }
        
        return degree == 0;
    }
}


//Explanation for line 10 - 12
//Since this is a preorder serialization, degrees are calculated in a top-down fashion, 
//and, tree is a structure that each node has only one indegree and at most two outdegree. 
//Positive degree means there are more indegree than outdegree, which violates the definition.
