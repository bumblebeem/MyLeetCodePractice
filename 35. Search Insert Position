public class Solution {
    public int searchInsert(int[] nums, int target) {
        for(int i = 0; i < nums.length; i ++){
            if(target <= nums[i]){
                return i;
            }
        }
        return nums.length;
    }
}


//Before I saw the discussions, I thought my solution was good...
//remember to return low in line 28
public class Solution {
    public int searchInsert(int[] nums, int target) {
        int low = 0, high = nums.length - 1;
        while(low <= high){
            int mid = low + (high - low) / 2;
            if(nums[mid] < target){
                low = mid + 1;
            }else if(nums[mid] == target){
                return mid;
            }else{
                high = mid - 1;
            }
        }
        return low;
    }
}

//28行和18行不好理解，18行为何是<=，28行为何return的是low


//Here is a link to my own conclusion:
//https://leetcode.com/discuss/85327/o-n-solution-%26-o-logn-solution-w-explanation
