public class Solution {
    public int evalRPN(String[] tokens) {
        Stack<Integer> stack = new Stack<Integer>();
        for(String str : tokens){
            if(isOperator(str)){
                int num2 = stack.pop();
                int num1 = stack.pop();
                if(str.equals("+")){
                    stack.push(num1 + num2);
                } else if(str.equals("-")){
                    stack.push(num1 - num2);
                } else if(str.equals("*")){
                    stack.push(num1 * num2);
                } else if(str.equals("/")){
                    stack.push(num1 / num2);
                }
            } else {
                stack.push(Integer.parseInt(str));
            }
        }
        return stack.peek();
    }
    
    private boolean isOperator(String str){
        if(str.equals("+") || str.equals("-") || str.equals("*") || str.equals("/")){
            return true;
        }
        return false;
    }
}


// 这题目搞清楚逆波兰表达式就OK了
// 注意18行直接用parseInt就OK，不用自己parse了。。
