public class Solution {
    public boolean repeatedSubstringPattern(String str) {
        if(str == null || str.length() < 2){
            return false;
        }
        for(int i = str.length() / 2; i > 0; i --){
            if(str.length() % i == 0){
                int times = str.length() / i;
                String subString = str.substring(0, i);
                StringBuilder sb = new StringBuilder();
                for(int j = 0; j < times; j ++){
                    sb.append(subString);
                }
                if(sb.toString().equals(str)){
                    return true;
                }
            }
        }
        return false;
    }
}


// 思路的话不算很难吧，不过第7行的剪枝需要注意
// https://discuss.leetcode.com/topic/67992/java-simple-solution-with-explanation
