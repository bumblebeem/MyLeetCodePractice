public class Solution {
    public boolean isAnagram(String s, String t) {
        if(s.length() != t.length()){
            return false;
        }
        int[] ss = new int[26];
        int[] tt = new int[26];
        for(int i = 0; i < s.length(); i ++){
            ss[s.charAt(i) - 'a'] ++;
            tt[t.charAt(i) - 'a'] ++;
        }
        int j = 0;
        for(; j < 26; j ++){
            if(ss[j] != tt[j]){
                return false;
            }
        }
        return true;
    }
}

//we can further optimized the space complexity by using one array instead of two
public class Solution {
    public boolean isAnagram(String s, String t) {
        if(s.length() != t.length()){
            return false;
        }
        int[] one = new int[26];
        for(int i = 0; i < s.length(); i ++){
            one[s.charAt(i) - 'a'] ++;
            one[t.charAt(i) - 'a'] --;
        }
        for(int i = 0; i < 26; i ++){
            if(one[i] != 0){
                return false;
            }
        }
        return true;
    }
}
