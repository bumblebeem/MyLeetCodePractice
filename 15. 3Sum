public class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> result = new LinkedList<>();
        Arrays.sort(nums);
        for(int i = 0; i < nums.length - 2; i ++){
            int a = nums[i];
            int start = i + 1;
            int end = nums.length - 1;
            while(start < end){
                int b = nums[start];
                int c = nums[end];
                if(a + b + c == 0){
                    List<Integer> temp = new LinkedList<>();
                    temp.add(a);
                    temp.add(b);
                    temp.add(c);
                    result.add(temp);
                    while(start < end && nums[start] == nums[start + 1]){
                        start ++;
                    }
                    while(start < end && nums[end] == nums[end - 1]){
                        end --;
                    }
                    start ++;
                    end --;
                }else if(a + b + c > 0){
                    end --;
                }else{
                    start ++;
                }
            }
            while(i < nums.length - 2 && nums[i] == nums[i + 1]){
                i ++;
            }
        }
        return result;
    }
}


//line 13, 初始化的语法
//line 4, Arrays.sort用的是dual-pivot quicksort
//line 18, 21, 32的三个while很重要，否则就要超时

//https://en.wikipedia.org/wiki/3SUM
