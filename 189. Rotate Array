public class Solution {
    public void rotate(int[] nums, int k) {
        if(nums.length <= 1 || k < 0){
            return;
        }
        
        k = k % nums.length;
        reverse(nums, 0, nums.length - 1);
        reverse(nums, 0, k - 1);
        reverse(nums, k, nums.length - 1);
    }
    
    private void reverse(int[] nums, int start, int end){
        while(start < end){
            int temp = nums[start];
            nums[start] = nums[end];
            nums[end] = temp;
            start ++;
            end --;
        }
    }
}


// 画个图就很好理解了
// 注意line 7，k有可能大于nums.length


// Easy trivial solution
public class Solution {
    public void rotate(int[] nums, int k) {
        int[] copy = nums.clone();
        // for(int i = 0; i < nums.length; i ++){
        //     copy[i] = nums[i];
        // }
        for(int i = 0; i < nums.length; i ++){
            nums[(i + k) % nums.length] = copy[i];
        }
    }
}
