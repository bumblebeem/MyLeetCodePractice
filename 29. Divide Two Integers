public class Solution {
    public int divide(int dividend, int divisor) {
        if(divisor == 0 || (dividend == Integer.MIN_VALUE && divisor == -1) ) {
            return Integer.MAX_VALUE;
        }
        int sign = ((dividend > 0) ^ (divisor > 0)) ? -1 : 1;
        long dvd = Math.abs((long)dividend);
        long dvs = Math.abs((long)divisor);
        int res = 0;
        
        while(dvd >= dvs) {
            long temp = dvs;
            int multiple = 1;
            while(dvd >= (temp << 1)) {
                temp <<= 1;
                multiple <<= 1;
            }
            dvd -= temp;
            res += multiple;
        }
        
        return sign == 1 ? res : -res;
    }
}


//line6对于符号判断的这种写法很精妙啊，没太看懂。。。
//注意line7 & 8的强制类型转换一定要在调用Math.abs之前完成，否则出错，不太理解。。。
//https://leetcode.com/discuss/38997/detailed-explained-8ms-c-solution
