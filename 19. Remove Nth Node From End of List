/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode start = new ListNode(0);
        ListNode fast = start;
        ListNode slow = start;
        start.next = head;
        
        for(int i = 0; i < n; i ++){
            fast = fast.next;
        }
        while(fast.next != null){
            fast = fast.next;
            slow = slow.next;
        }
        slow.next = slow.next.next;
        return start.next;
    }
}

//1. Use two pointers in order to solve it in one pass!
//2. Need to pay attention to line 11 - 14, which tells me that:
//在Java中传递参数时，原始类型是传值，对象是传引用
//*3. 运用一个额外的start，注意理解！因为head有可能需要被remove！
