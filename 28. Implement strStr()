public class Solution {
    public int strStr(String haystack, String needle) {
        if(haystack == null || needle == null){
            return -1;
        }
        int n = needle.length();
        int h = haystack.length();
        if(n > h){
            return -1;
        }
        for(int i = 0; i < h - n + 1; i ++){
            int j = 0;
            for(; j < n; j ++){
                if(haystack.charAt(i + j) != needle.charAt(j)){
                    break;
                }
            }
            if(j == n){
                return i;
            }
        }
        return -1;
    }
}


// line 11,只需要判断到h - n + 1就可以了，而不需要到h全部结束！

// Here is a good link:
// https://leetcode.com/discuss/38998/explained-4ms-easy-c-solution


// 另一种写法，与上一个解法的不同之处是，这个解法需要39-41行的判断，否则要WA。。
public class Solution {
    public int strStr(String haystack, String needle) {
        if(needle == null || haystack == null || needle.length() > haystack.length()){
            return -1;
        }
        if(needle.length() == 0){
            return 0;
        }
        for(int i = 0; i < haystack.length() - needle.length() + 1; i ++){
            for(int j = 0; j < needle.length(); j ++){
                if(needle.charAt(j) != haystack.charAt(i + j)){
                    break;
                }
                if(j == needle.length() - 1){
                    return i;
                }
            }
        }
        return -1;
    }
}
