//https://discuss.leetcode.com/topic/55377/simple-java-dfs-solution
//Great dfs solution, TRULLY easy-to-understand! 
//After read the solution, I implemented it entirely by myself...
//想要自己想到这种dfs，主要是要想到preorder才行。。
public class Solution {
    public List<Integer> lexicalOrder(int n) {
        List<Integer> res = new ArrayList<Integer>();
        for(int i = 1; i <= 9; i ++){
            dfs(i, n, res);
        }
        return res;
    }
    
    private void dfs(int cur, int n, List<Integer> res){
        if(cur > n){
            return;
        }
        res.add(cur);
        for(int i = 0; i <= 9; i ++){
            if(cur * 10 + i > n){
                return;
            }
            dfs(cur * 10 + i, n, res);
        }
    }
}


//Here is a iterative solution, hard-to-understand..
//https://discuss.leetcode.com/topic/55184/java-o-n-time-o-1-space-iterative-solution-130ms
