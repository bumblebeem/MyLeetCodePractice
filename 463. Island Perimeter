public class Solution {
    public int islandPerimeter(int[][] grid) {
        int perimeter = 0;
        int countOfLands = 0;
        for(int i = 0; i < grid.length; i ++){
            for(int j = 0; j < grid[0].length; j ++){
                if(grid[i][j] == 1){
                    countOfLands ++;
                    int adj = getAdj(grid, i, j);
                    if(adj == 1){
                        perimeter += 3;
                    } else if(adj == 2){
                        perimeter += 2;
                    } else if(adj == 3){
                        perimeter += 1;
                    }
                }
            }
        }
        if(countOfLands == 1){
            return 4;
        } else {
            return perimeter;
        }
    }
    
    private int getAdj(int[][] grid, int x, int y){
        int[] dx = {1, -1, 0, 0};
        int[] dy = {0, 0, 1, -1};
        int count = 0;
        for(int i = 0; i < 4; i ++){
            int nextx = x + dx[i];
            int nexty = y + dy[i];
            if(inBound(grid, nextx, nexty) && grid[nextx][nexty] == 1){
                count ++;
            }
        }
        return count;
    }
    
    private boolean inBound(int[][] grid, int x, int y){
        if(x >= 0 && y >= 0 && x < grid.length && y < grid[0].length){
            return true;
        }
        return false;
    }
}

// 我的解法就是数一个岛上下左右四个位置有几个是岛，有一个的话周长加3，两个周长加2，三个周长加一，四个周长加零
// 之后注意如果只有一个单个的岛，周长是四，需要特殊处理
