public class Solution {
    public void nextPermutation(int[] nums) {
        int n = nums.length;
        //no more than 2 elements in the array, return directly
        if(n < 2) {
            return;
        }
        int index = n - 1;
        while(index > 0) {
            if(nums[index - 1] < nums[index]) {
                break;
            }
            index --;
        }
        
        if(index == 0) {
            reverse(nums, 0, n - 1);
            return;
        } else {
            int j = n - 1;
            while(j >= index) {
                if(nums[index - 1] < nums[j]){
                    break;
                }
                j --;
            }
            swap(nums, j, index - 1);
            reverse(nums, index, n - 1);
            return;
        }
    }
    
    public void swap(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
    
    public void reverse(int[] nums, int start, int end) {
        while(start < end) {
            int temp = nums[start];
            nums[start] = nums[end];
            nums[end] = temp;
            start ++;
            end --;
        }
    }
}

//主要是不太懂容易发现下边的规律啊。。

//1.Start from its last element, traverse backward to find the first one with index i that satisfy num[i-1] < num[i]. 
//So, elements from num[i] to num[n-1] is reversely sorted.
//2.To find the next permutation, we have to swap some numbers at different positions, 
//to minimize the increased amount, we have to make the highest changed position as high as possible. 
//Notice that index larger than or equal to i is not possible as num[i,n-1] is reversely sorted. 
//So, we want to increase the number at index i-1, clearly, swap it with the smallest number between num[i,n-1] that is larger than num[i-1]. 
//For example, original number is 121543321, we want to swap the '1' at position 2 with '2' at position 7.
//3.The last step is to make the remaining higher position part as small as possible, 
//we just have to reversely sort the num[i,n-1]
