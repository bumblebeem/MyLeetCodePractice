//思路明白了，但是具体实现时，很多下标搞不清楚。。
public class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int len = nums1.length + nums2.length;
        if(len % 2 == 1){
            return findKth(nums1, 0, nums2, 0, len / 2 + 1);
        } else {
            return ( findKth(nums1, 0, nums2, 0, len / 2) + findKth(nums1, 0, nums2, 0, len / 2 + 1) ) / 2.0;
        }
    }
    
    public int findKth(int[] nums1, int index1, int[] nums2, int index2, int k){
        if(index1 >= nums1.length){
            return nums2[index2 + k - 1];
        }
        if(index2 >= nums2.length){
            return nums1[index1 + k - 1];
        }
        
        if(k == 1){
            return Math.min(nums1[index1], nums2[index2]);
        }
        
        int k1 = index1 + k / 2 - 1 < nums1.length
                 ? nums1[index1 + k / 2 - 1]
                 : Integer.MAX_VALUE;
        int k2 = index2 + k / 2 - 1 < nums2.length
                 ? nums2[index2 + k / 2 - 1]
                 : Integer.MAX_VALUE;
        if(k1 < k2){
            return findKth(nums1, index1 + k / 2, nums2, index2, k - k / 2);
        } else {
            return findKth(nums1, index1, nums2,index2 + k / 2, k - k / 2);
        }
    }
}
