public class Solution {
    public int[][] generateMatrix(int n) {
        // corner case
        if(n <= 0){
            return new int[0][0];
        }
        
        // right, down, left, up
        int[] dx = {0, 1, 0, -1};
        int[] dy = {1, 0, -1, 0};
        
        int[][] res = new int[n][n];
        res[0][0] = 1;
        int cur = 2;
        int i = 0, y = 0;
        // 就转着圈得往矩阵里边填数就行了
        while(cur <= n * n){
            while(i + dx[0] < n && y + dy[0] < n && res[i + dx[0]][y + dy[0]] == 0){
                res[i + dx[0]][y + dy[0]] = cur;
                cur ++;
                i += dx[0];
                y += dy[0];
            }
            while(i + dx[1] < n && y + dy[1] < n && res[i + dx[1]][y + dy[1]] == 0){
                res[i + dx[1]][y + dy[1]] = cur;
                cur ++;
                i += dx[1];
                y += dy[1];
            }
            while(i + dx[2] >= 0 && y + dy[2] >= 0 && res[i + dx[2]][y + dy[2]] == 0){
                res[i + dx[2]][y + dy[2]] = cur;
                cur ++;
                i += dx[2];
                y += dy[2];
            }
            while(i + dx[3] >= 0 && y + dy[3] >= 0 && res[i + dx[3]][y + dy[3]] == 0){
                res[i + dx[3]][y + dy[3]] = cur;
                cur ++;
                i += dx[3];
                y += dy[3];
            }
        }
        return res;
    }
}
