/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode swapPairs(ListNode head) {
        if(head == null || head.next == null){
            return head;
        }
        ListNode start = new ListNode(0);
        start.next = head;
        for(ListNode cur = start; cur.next != null && cur.next.next != null; cur = cur.next.next){
            cur.next = swap(cur.next, cur.next.next);
        }
        return start.next;
    }
    
    private ListNode swap(ListNode next1, ListNode next2){
        next1.next = next2.next;
        next2.next = next1;
        return next2;
    }
}

//line 14的语法
//很多细节问题出错，值得再做。。

//below is a link to a recursive solution, didn't understand
//https://leetcode.com/discuss/14045/my-accepted-java-code-used-recursion


