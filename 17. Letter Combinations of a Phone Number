public class Solution {
    public List<String> letterCombinations(String digits) {
        List<String> res = new ArrayList<String>();
        if(digits == null || digits.length() == 0) {
            return res;
        }
        
        String[] keyboards = new String[] {"none", "none", "abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"};
        res.add("");
        
        for(int i = 0; i < digits.length(); i ++) {
            int d = digits.charAt(i) - '0';
            String s = keyboards[d];
            int cur_size = res.size();
            for(int j = 0; j < cur_size; j ++) {
                String cur = res.remove(0);
                for(int k = 0; k < s.length(); k ++){
                    res.add(cur + s.charAt(k));
                }
            }
        }
        
        return res;
    }
}


//Pay attention to the corner case on line 4 - 6!
//就是每次循环取出之前所有可能生成的字符串，加入一个新的可能的字母，直到没有字母可加为止
