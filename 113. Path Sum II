/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        getPathSum(root, sum, res, new ArrayList<Integer>());
        return res;
    }
    
    private void getPathSum(TreeNode root, int sum, List<List<Integer>> res, List<Integer> cur) {
        if(root == null) {
            return;
        } 
        cur.add(root.val);
        if(root.left == null && root.right == null && sum - root.val == 0) {
            res.add(new ArrayList<Integer>(cur));
        } else {
            getPathSum(root.left, sum - root.val, res, cur);
            getPathSum(root.right, sum - root.val, res, cur);
        }
        cur.remove(cur.size() - 1);
    }
}


//Finally! Backtracking基本找到感觉了！
