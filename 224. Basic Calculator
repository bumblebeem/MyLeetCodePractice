public class Solution {
    public int calculate(String s) {
        int sign = 1, result = 0;
        Stack<Integer> stack = new Stack<Integer>();
        for(int i = 0; i < s.length(); i ++){
            char c = s.charAt(i);
            if(Character.isDigit(c)){
                int num = c - '0';
                while(i + 1 < s.length() && Character.isDigit(s.charAt(i + 1))){
                    num = num * 10 + s.charAt(i + 1) - '0';
                    i ++;
                }
                result += num * sign;
            }
            else if(c == '+'){
                sign = 1;
            }
            else if(c == '-'){
                sign = -1;
            }
            else if(c == '('){
                stack.push(result);
                stack.push(sign);
                result = 0;
                sign = 1;
            }
            else if(c == ')'){
                result = result * stack.pop() + stack.pop();
            }
        }
        return result;
    }
}


// Notice the use of "sign".
// Pay attention to the code from line 21 - 29(about how to deal with '(' and ')').

// https://discuss.leetcode.com/topic/15816/iterative-java-solution-with-stack
