public class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        int i = m - 1;
        int j = n - 1;
        int k = m + n - 1;
        
        while(i >= 0 && j >= 0){
            if(nums2[j] > nums1[i]){
                nums1[k --] = nums2[j --];
            }
            else{
                nums1[k --] = nums1[i --];
            }
        }
        while(j >= 0){
            nums1[k --] = nums2[j --];
        }
    }
}


//This code relies on the simple observation that once all of the numbers from nums2 have been merged into nums1, 
//the rest of the numbers in nums1 that were not moved are already in the correct place.
//That's why we have line 15 while(j >= 0), but don't have while(i >= 0)


//Notice the difference between this one and Problem No.21
