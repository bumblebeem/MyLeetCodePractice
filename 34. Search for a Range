public class Solution {
    public int[] searchRange(int[] nums, int target) {
        if(nums == null || nums.length == 0){
            return new int[]{-1, -1};
        }
        int left = -1, right = -1;
        //search for left bound
        int start = 0, end = nums.length - 1;
        while(start + 1 < end){
            int mid = (end - start) / 2 + start;
            if(nums[mid] < target){
                start = mid;
            }else if(nums[mid] > target){
                end = mid;
            }else{
                end = mid;
            }
        }
        if(nums[start] == target){
            left = start;
        }else if(nums[end] == target){
            left = end;
        }
        if(left == -1){
            return new int[]{-1, -1};
        }
        //search for right bound
        start = 0; 
        end = nums.length - 1;
        while(start + 1 < end){
            int mid = (end - start) / 2 + start;
            if(nums[mid] < target){
                start = mid;
            }else if(nums[mid] > target){
                end = mid;
            }else{
                start = mid;
            }
        }
        if(nums[end] == target){
            right = end;
        }else if(nums[start] == target){
            right = start;
        }
        return new int[]{left, right};
    }
}


//做两次Binary Search，分别找到左边界和右边界
//注意第4行的语法
//注意第21行和42行要用else if，自己写的时候debug出来的唯一问题，yeah
