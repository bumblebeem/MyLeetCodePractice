// Java Iterator interface reference:
// https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html
class PeekingIterator implements Iterator<Integer> {
    private Iterator<Integer> iterator;
    private Integer peek;

	public PeekingIterator(Iterator<Integer> iterator) {
	    // initialize any member here.
	    this.iterator = iterator;
	    if(this.iterator.hasNext()){
	        peek = this.iterator.next();
	    }
	}

        // Returns the next element in the iteration without advancing the iterator.
	public Integer peek() {
            return peek;
	}

	// hasNext() and next() should behave the same as in the Iterator interface.
	// Override them if needed.
	@Override
	public Integer next() {
	    Integer temp = peek;
	    peek = iterator.hasNext() ? iterator.next() : null;
	    return temp;
	}

	@Override
	public boolean hasNext() {
	    return peek != null;
	}
}


//Need to get a better understanding of line 10 - 12.
