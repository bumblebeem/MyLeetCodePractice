public class Solution {
    public List<List<Integer>> combinationSum3(int k, int n) {
        List<List<Integer>> res = new LinkedList<List<Integer>>();
        List<Integer> sol = new LinkedList<Integer>();
        backtrackingCom(res, sol, k, n, 1);
        return res;
    }
    
    private void backtrackingCom(List<List<Integer>> res, List<Integer> sol, int k, int target, int begin){
        if(k == 0 && target == 0){
            res.add(new LinkedList<Integer>(sol));
            return;
        }
        else{
            for(int i = begin; i <= 9; i ++){
                if(target - i < 0){
                    break;
                }
                sol.add(i);
                backtrackingCom(res, sol, k - 1, target - i, i + 1);
                sol.remove(sol.size() - 1);
            }
        }
    }
}


//line 14的else十分重要
//backtracking理解的不好！
