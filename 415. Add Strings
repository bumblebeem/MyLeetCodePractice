public class Solution {
    public String addStrings(String num1, String num2) {
        char[] temp1 = num1.toCharArray();
        char[] temp2 = num2.toCharArray();
        int[] n1 = new int[temp1.length];
        int[] n2 = new int[temp2.length];
        for(int i = 0; i < n1.length; i ++){
            n1[i] = temp1[i] - '0';
        }
        for(int i = 0; i < n2.length; i ++){
            n2[i] = temp2[i] - '0';
        }
        
        int[] res = new int[Math.max(temp1.length, temp2.length) + 1];
        int p1 = n1.length - 1;
        int p2 = n2.length - 1;
        int i = res.length - 1;
        int carry = 0;
        while(p1 >= 0 && p2 >= 0){
            int sum = n1[p1] + n2[p2] + carry;
            res[i] = sum % 10;
            carry = sum / 10;
            i --;
            p1 --;
            p2 --;
        }
        while(p1 >= 0){
            int sum = n1[p1] + carry;
            res[i] = sum % 10;
            carry = sum / 10;
            i --;
            p1 --;
        }
        while(p2 >= 0){
            int sum = n2[p2] + carry;
            res[i] = sum % 10;
            carry = sum / 10;
            i --;
            p2 --;
        }
        if(carry == 1){
            res[0] = 1;
        }
        
        StringBuilder sb = new StringBuilder();
        int index = 0;
        if(res[0] == 0){
            index ++;
        }
        while(index < res.length){
            sb.append(res[index]);
            index ++;
        }
        return sb.toString();
    }
}


// Here is a very concise solution:
// https://discuss.leetcode.com/topic/62310/straightforward-java-8-main-lines-25ms
