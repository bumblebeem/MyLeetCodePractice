class Queue {
public:
    stack<int> sta;
    stack<int> que;
    // Push element x to the back of queue.
    void push(int x) {
        while(! que.empty()){
            sta.push(que.top());
            que.pop();
        }
        sta.push(x);
        while(! sta.empty()){
            que.push(sta.top());
            sta.pop();
        }
    }

    // Removes the element from in front of queue.
    void pop(void) {
        que.pop();
    }

    // Get the front element.
    int peek(void) {
        return que.top();
    }

    // Return whether the queue is empty.
    bool empty(void) {
        return que.size() == 0;
    }
};


//The trick here is to use two stacks...
